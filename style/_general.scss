@import "base";


// Pallet Mixins

@mixin primary-background {
	background-color: $primary-color-normal;
	color: $primary-color-text;
}
.primary-background {
	@include primary-background;
}

@mixin secondary-background {
	background-color: $secondary-color-normal;
	color: $secondary-color-text;
}
.secondary-background {
	@include secondary-background;
}

@mixin tertiary-background {
	background-color: $tertiary-color-normal;
	color: $tertiary-color-text;
}
.tertiary-background {
	@include tertiary-background;
}

@mixin alert-background {
	background-color: $alert-color-normal;
	color: $alert-color-text;
}
.alert-background {
	@include alert-background;
}

@mixin error-background {
	background-color: $error-color-normal;
	color: $error-color-text;
}
.error-background {
	@include error-background;
}

@mixin success-background {
	background-color: $success-color-normal;
	color: $success-color-text;
}
.success-background {
	@include success-background;
}

@mixin disable-background {
	background-color: $disable-color-normal;
	color: black;
}
.disable-background {
	@include disable-background;
}

@mixin accessory-orange-background {
	background-color: $accessory-orange-normal;
	color: $accessory-orange-text;
}
.accessory-orange-background {
	@include accessory-orange-background;
}

@mixin accessory-blue-background {
	background-color: $accessory-blue-normal;
	color: $accessory-blue-text;
}
.accessory-blue-background {
	@include accessory-blue-background;
}

@mixin accessory-green-background {
	background-color: $accessory-green-normal;
	color: $accessory-green-text;
}
.accessory-green-background {
	@include accessory-green-background;
}

@mixin default-text-color {
	color: $normal-text-color;
}
.default-text-color {
	@include default-text-color;
}

@mixin gray-text-color {
	color: $gray-text-color;
}
.gray-text-color {
	@include gray-text-color;
}

@mixin primary-color {
	color: $primary-color-normal;
}
.primary-color {
	@include primary-color;
}

@mixin secondary-color {
	color: $secondary-color-normal;
}
.secondary-color {
	@include secondary-color;
}

@mixin tertiary-color {
	color: $tertiary-color-normal;
}
.tertiary-color {
	@include tertiary-color;
}

@mixin alert-color {
	color: $alert-color-normal;
}
.alert-color {
	@include alert-color;
}

@mixin error-color {
	color: $error-color-normal;
}
.error-color {
	@include error-color;
}

@mixin success-color {
	color: $success-color-normal;
}
.success-color {
	@include success-color;
}

@mixin disable-color {
	color: $disable-color-normal;
}
.disable-color {
	@include disable-color;
}

@mixin accessory-orange-color {
	color: $accessory-orange-normal;
}
.accessory-orange-color {
	@include accessory-orange-color;
}

@mixin accessory-blue-color {
	color: $accessory-blue-normal;
}
.accessory-blue-color {
	@include accessory-blue-color;
}

@mixin accessory-green-color {
	color: $accessory-green-normal;
}
.accessory-green-color {
	@include accessory-green-color;
}

// These ripple classes are depreciated in favor of ripple--{color}
%ripple {
	background-position: center;
	transition: background 0.8s;

	&:active {
		background-size: 100%;
		transition: background 0s;
	}
}

@mixin ripple-error {
	@extend %ripple;
	&:active {
		background-color: rgba($error-color-normal, 0.5) !important;
		background: rgba($error-color-normal, 0.5) !important;
	}
}
.ripple-error {
	@include ripple-error;
}

@mixin ripple-alert {
	@extend %ripple;
	&:active {
		background-color: rgba($alert-color-normal, 0.5) !important;
		background: rgba($alert-color-normal, 0.5) !important;
	}
}
.ripple-alert {
	@include ripple-alert;
}

@mixin ripple-success {
	@extend %ripple;
	&:active {
		background-color: rgba($success-color-normal, 0.5) !important;
		background: rgba($success-color-normal, 0.5) !important;
	}
}
.ripple-success {
	@include ripple-success;
}

@mixin ripple-accessory-orange {
	@extend %ripple;
	&:active {
		background-color: rgba($accessory-orange-normal, 0.5) !important;
		background: rgba($accessory-orange-normal, 0.5) !important;
	}
}
.ripple-accessory-orange {
	@include ripple-accessory-orange;
}

@mixin ripple-accessory-blue {
	@extend %ripple;
	&:active {
		background-color: rgba($accessory-blue-normal, 0.5) !important;
		background: rgba($accessory-blue-normal, 0.5) !important;
	}
}
.ripple-accessory-blue {
	@include ripple-accessory-blue;
}

@mixin ripple-accessory-green {
	@extend %ripple;
	&:active {
		background-color: rgba($accessory-green-normal, 0.5) !important;
		background: rgba($accessory-green-normal, 0.5) !important;
	}
}
.ripple-accessory-green {
	@include ripple-accessory-green;
}

@mixin ripple-primary {
	@extend %ripple;
	&:active {
		background-color: rgba($primary-color-normal, 0.5) !important;
		background: rgba($primary-color-normal, 0.5) !important;
	}
}
.ripple-primary {
	@include ripple-primary;
}

@mixin ripple-secondary {
	@extend %ripple;
	&:active {
		background-color: rgba($secondary-color-normal, 0.5) !important;
		background: rgba($secondary-color-normal, 0.5) !important;
	}
}
.ripple-secondary {
	@include ripple-secondary;
}

@mixin ripple-tertiary {
	@extend %ripple;
	&:active {
		background-color: rgba($tertiary-color-normal, 0.5) !important;
		background: rgba($tertiary-color-normal, 0.5) !important;
	}
}
.ripple-tertiary {
	@include ripple-tertiary;
}

// These hover classes are depreciated in favor of hover--{color}
@mixin hover-primary {
	&:hover {
		background-color: $primary-color-light;
		background: $primary-color-light;
	}
}
.hover-primary {
	@include hover-primary;
}

@mixin hover-secondary {
	&:hover {
		background-color: $secondary-color-light;
		background: $secondary-color-light;
	}
}
.hover-secondary {
	@include hover-secondary;
}

@mixin hover-tertiary {
	&:hover {
		background-color: $tertiary-color-transparent;
		background: $tertiary-color-transparent;
	}
}
.hover-tertiary {
	@include hover-tertiary;
}

@mixin hover-error {
	&:hover {
		background-color: $error-color-transparent;
		background: $error-color-transparent;
	}
}
.hover-error {
	@include hover-error;
}

@mixin hover-alert {
	&:hover {
		background-color: $alert-color-transparent;
		background: $alert-color-transparent;
	}
}
.hover-alert {
	@include hover-alert;
}

@mixin hover-success {
	&:hover {
		background-color: $success-color-transparent;
		background: $success-color-transparent;
	}
}
.hover-success {
	@include hover-success;
}

@mixin hover-accessory-orange {
	&:hover {
		background-color: $accessory-orange-transparent;
		background: $accessory-orange-transparent;
	}
}
.hover-accessory-orange {
	@include hover-accessory-orange;
}

@mixin hover-accessory-blue {
	&:hover {
		background-color: $accessory-blue-transparent;
		background: $accessory-blue-transparent;
	}
}
.hover-accessory-blue {
	@include hover-accessory-blue;
}

@mixin hover-accessory-green {
	&:hover {
		background-color: $accessory-green-transparent;
		background: $accessory-green-transparent;
	}
}
.hover-accessory-green {
	@include hover-accessory-green;
}

@function getColorVariable($colorName, $colorType) {
	@if $colorName == "primary" and $colorType == "normal" {
		@return $primary-color-normal;
	} @else if $colorName == "primary" and $colorType == "light" {
		@return $primary-color-light;
	} @else if $colorName == "primary" and $colorType == "text" {
		@return $primary-color-text;
	} @else if $colorName == "secondary" and $colorType == "normal" {
		@return $secondary-color-normal;
	} @else if $colorName == "secondary" and $colorType == "light" {
		@return $secondary-color-light;
	} @else if $colorName == "secondary" and $colorType == "text" {
		@return $secondary-color-text;
	} @else if $colorName == "tertiary" and $colorType == "normal" {
		@return $tertiary-color-normal;
	} @else if $colorName == "tertiary" and $colorType == "light" {
		@return $tertiary-color-light;
	} @else if $colorName == "tertiary" and $colorType == "text" {
		@return $tertiary-color-text;
	} @else if $colorName == "alert" and $colorType == "normal" {
		@return $alert-color-normal;
	} @else if $colorName == "alert" and $colorType == "light" {
		@return $alert-color-light;
	} @else if $colorName == "alert" and $colorType == "text" {
		@return $alert-color-text;
	} @else if $colorName == "error" and $colorType == "normal" {
		@return $error-color-normal;
	} @else if $colorName == "error" and $colorType == "light" {
		@return $error-color-light;
	} @else if $colorName == "error" and $colorType == "text" {
		@return $error-color-text;
	} @else if $colorName == "success" and $colorType == "normal" {
		@return $success-color-normal;
	} @else if $colorName == "success" and $colorType == "light" {
		@return $success-color-light;
	} @else if $colorName == "success" and $colorType == "text" {
		@return $success-color-text;
	} @else if $colorName == "accessory-blue" and $colorType == "normal" {
		@return $accessory-blue-normal;
	} @else if $colorName == "accessory-blue" and $colorType == "light" {
		@return $accessory-blue-light;
	} @else if $colorName == "accessory-blue" and $colorType == "text" {
		@return $accessory-blue-text;
	} @else if $colorName == "accessory-green" and $colorType == "normal" {
		@return $accessory-green-normal;
	} @else if $colorName == "accessory-green" and $colorType == "light" {
		@return $accessory-green-light;
	} @else if $colorName == "accessory-green" and $colorType == "text" {
		@return $accessory-green-text;
	} @else if $colorName == "accessory-orange" and $colorType == "normal" {
		@return $accessory-orange-normal;
	} @else if $colorName == "accessory-orange" and $colorType == "light" {
		@return $accessory-orange-light;
	} @else if $colorName == "accessory-orange" and $colorType == "text" {
		@return $accessory-orange-text;
	}
}

@mixin colorMixin($property, $includeSingleValueColors, $optionalSuffix: "") {
	@each $c in $colorOptions {
		&--#{$c}-normal {
			#{$property}: getColorVariable($c, "normal") unquote($optionalSuffix);
		}

		&--#{$c}-light {
			#{$property}: getColorVariable($c, "light") unquote($optionalSuffix);
		}

		&--#{$c}-text {
			#{$property}: getColorVariable($c, "text") unquote($optionalSuffix);
		}
	}

	@if $includeSingleValueColors {
		&--hover {
			#{$property}: $hover-color unquote($optionalSuffix);
		}

		&--background {
			#{$property}: $background-color unquote($optionalSuffix);
		}

		&--white {
			#{$property}: white unquote($optionalSuffix);
		}
	}
}

@mixin colorStateMixin($property, $includeSingleValueColors, $optionalSuffix: "", $state: "") {
	@each $c in $colorOptions {
		&--#{$c}-normal {
			#{$state} {
				#{$property}: getColorVariable($c, "normal") unquote($optionalSuffix);
			}
		}

		&--#{$c}-light {
			#{$state} {
				#{$property}: getColorVariable($c, "light") unquote($optionalSuffix);
			}
		}

		&--#{$c}-text {
			#{$state} {
				#{$property}: getColorVariable($c, "text") unquote($optionalSuffix);
			}
		}
	}

	@if $includeSingleValueColors {
		&--hover {
			#{$state} {
				#{$property}: $hover-color unquote($optionalSuffix);
			}
		}

		&--background {
			#{$state} {
				#{$property}: $background-color unquote($optionalSuffix);
			}
		}

		&--white {
			#{$state} {
				#{$property}: white unquote($optionalSuffix);
			}
		}
	}
}

.background-color {
	@include colorMixin(background-color, true);
}

.color {
	@include colorMixin(color, false, !important);
}

.hover {
	@include colorStateMixin(background-color, false, !important, "&:hover");
}

.hover-border {
	@include colorStateMixin(border-color, false, !important, "&:hover");
}

.border {
	&--px-0 {
		border-width: 0px;
	}

	&--px-1 {
		border-width: 1px;
	}

	&--px-2 {
		border-width: 2px;
	}

	&--solid {
		border-style: solid;
	}

	&--dotted {
		border-style: dotted;
	}

	&--dashed {
		border-style: dashed;
	}

	@include colorMixin(border-color, true, !important);
}

.ripple {
	background-position: center;
	transition: background 0.8s;

	&:active {
		background-size: 100%;
		transition: background 0s;
	}

	@include colorStateMixin(background-color, false, !important, "&:active");
}


.border-radius {
	&--zero {
		border-radius: 0px;
	}

	&--none {
		border-radius: 0px;
	}

	&--half {
		border-radius: $border-radius-half;
	}

	&--normal {
		border-radius: $border-radius-normal;
	}

	&--full {
		border-radius: $border-radius-full;
	}
}



// Fonts

@mixin font-light {
	font-family: $font-family-primary;
	font-weight: $font-weight-light;
}
.font-light {
	@include font-light;
}


@mixin font-normal {
	font-family: $font-family-primary;
	font-weight: $font-weight-normal;
}
.font-normal {
	@include font-normal;
}


@mixin font-header {
	font-family: $font-family-secondary;
	font-weight: $font-weight-bold;
}
.font-header {
	@include font-header;
}

.font-weight {
	&--light {
		font-weight: $font-weight-light;
	}

	&--normal {
		font-weight: $font-weight-normal;
	}

	&--bold {
		font-weight: $font-weight-bold;
	}

	&--extra-bold {
		font-weight: $font-weight-extra-bold;
	}
}


@mixin typography-title-large {
	font-family: $font-family-secondary;
	font-size: 20px;
}
.typography-title-large {
	@include typography-title-large;
}

@mixin typography-title-medium {
	font-family: $font-family-secondary;
	font-size: 18px;
}
.typography-title-medium {
	@include typography-title-medium;
}

@mixin typography-title-small {
	font-family: $font-family-secondary;
	font-size: 16px;
}
.typography-title-small {
	@include typography-title-small;
}

@mixin typography-paragraph-large {
	font-family: $font-family-primary;
	font-size: 16px;
}
.typography-paragraph-large {
	@include typography-paragraph-large;
}

@mixin typography-paragraph-medium {
	font-family: $font-family-primary;
	font-size: 14px;
}
.typography-paragraph-medium {
	@include typography-paragraph-medium;
}

@mixin typography-paragraph-small {
	font-family: $font-family-primary;
	font-size: 12px;
}
.typography-paragraph-small {
	@include typography-paragraph-small;
}

@mixin typography-caption-large {
	font-family: $font-family-primary;
	font-size: 12px;
}
.typography-caption-large {
	@include typography-caption-large;
}

@mixin typography-caption-medium {
	font-family: $font-family-primary;
	font-size: 10px;
}
.typography-caption-medium {
	@include typography-caption-medium;
}

@mixin typography-caption-small {
	font-family: $font-family-primary;
	font-size: 8px;
}
.typography-caption-small {
	@include typography-caption-small;
}




// Mixins -------------------------------

@mixin clickable {
	cursor: pointer;
	
	&:hover {
		background-color: $hover-color;
	}
}
.clickable {
	@include clickable;
}

@mixin transition {
	transition: all ease 0.5s;
}
.transition {
	@include transition;
}

@mixin card-light-shadow {
	border-radius: $universal-border-radius;
	box-shadow: $box-shadow;
	background-color: white;
}
.card-light-shadow {
	@include card-light-shadow;
}

@mixin card-dark-shadow {
	border-radius: $universal-border-radius;
	box-shadow: $box-shadow-dark;
	background-color: white;
}
.card-dark-shadow {
	@include card-dark-shadow;
}

@mixin card-no-shadow {
	background-color: white;
	border-radius: $universal-border-radius;
	border: 2px solid $border-color;
}
.card-no-shadow {
	@include card-no-shadow;
}

@mixin card-selectable {
	cursor: pointer;
	@include transition;

	&:hover {
		background-color: $hover-color;
	}
}
.card-selectable {
	@include card-selectable;
}

@mixin card-selectable-gradient {
	cursor: pointer;
	@include transition;

	&:hover {
		background: $hover-color;
		background-image: $hover-color;
	}
}
.card-selectable-gradient {
	@include card-selectable-gradient;
}

@mixin card-header {
	@include primary-background;
	text-align: center;
	margin-top: 0;
	padding: 10px 0;
	border-radius: 10px 10px 0 0;
	@include font-header;
}
.card-header {
	@include card-header;
}

@mixin card-button-footer {
	border-radius: 0 0 10px 10px;
	border-top: 1px solid gray;
	padding: 10px;
	display: flex;
	justify-content: flex-end;
	align-items: center;
}
.card-button-footer {
	@include card-button-footer;
}

@mixin nonselectable {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
.nonselectable {
	@include nonselectable;
}


@mixin grid-two-column {
	display: grid;
	grid-template-columns: 1fr 1fr;
	column-gap: 10px;
}
.grid-two-column {
	@include grid-two-column;
}


@mixin grid-three-column {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	column-gap: 10px;
}
.grid-three-column {
	@include grid-three-column;
}


.grid {
	display: grid;

	&--one-one {
		grid-template-columns: 1fr 1fr;
	}

	&--one-one-two {
		grid-template-columns: 1fr 1fr 2fr;
	}

	&--two-one-one {
		grid-template-columns: 2fr 1fr 1fr;
	}

	&--one-one-one-one {
		grid-template-columns: 1fr 1fr 1fr 1fr;
	}

	&--one-three {
		grid-template-columns: 1fr 3fr;
	}

	&--three-one {
		grid-template-columns: 3fr 1fr;
	}

	&--column-gap-half {
		column-gap: $base-unit-half;
	}

	&--column-gap-one {
		column-gap: $base-unit;
	}

	&--column-gap-two {
		column-gap: $base-unit * 2;
	}

	&--row-gap-half {
		row-gap: $base-unit-half;
	}

	&--row-gap-one {
		row-gap: $base-unit;
	}

	&--row-gap-two {
		row-gap: $base-unit * 2;
	}
}


@mixin disabled {
	pointer-events: none;
	opacity: 0.4;
}
.disabled {
	@include disabled;
}

@mixin input-error {
	border: 2px solid $error-color-normal !important;
}
.input-error {
	@include input-error;
}

@mixin div-error-border {
	border: 3px solid $error-color-normal !important;
}
.div-error-border {
	@include div-error-border;
}

@mixin no-text-overflow {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.no-text-overflow {
	@include no-text-overflow;
}


@mixin flex-start {
	display: flex;
	align-items: center;
}
.flex-start {
	@include flex-start;
}


@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}
.flex-center {
	@include flex-center;
}

@mixin flex-row-space-around {
	display: flex;
	justify-content: space-around;
	align-items: center;
}
.flex-row-space-around {
	@include flex-row-space-around;
}

@mixin flex-row-space-between {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
.flex-row-space-between {
	@include flex-row-space-between;
}


@mixin flex-column {
	display: flex;
	flex-flow: column;
	align-items: center;
}
.flex-column {
	@include flex-column;
}


@mixin center-by-transform {
	margin-left: 50%;
	transform: translateX(-50%);
}
.center-by-transform {
	@include center-by-transform;
}

@mixin center-by-flex-row {
	display: flex;
	flex-flow: row;
	justify-content: center;
	align-items: center;
}
.center-by-flex-row {
	@include center-by-flex-row;
}

@mixin center-by-flex-column {
	display: flex;
	flex-flow: column;
	justify-content: center;
	align-items: center;
}
.center-by-flex-column {
	@include center-by-flex-column;
}



// Utility Classes

.max-width,
.width {
	&--px-600 {
		width: 600px;
	}

	&--px-500 {
		width: 500px;
	}

	&--px-400 {
		width: 400px;
	}

	&--px-300 {
		width: 300px;
	}

	&--px-200 {
		width: 200px;
	}

	&--px-150 {
		width: 150px;
	}

	&--px-100 {
		width: 100px;
	}

	&--vw-100 {
		width: 100vw;
	}

	&--vw-90 {
		width: 90vw;
	}

	&--vw-80 {
		width: 80vw;
	}

	&--vw-70 {
		width: 70vw;
	}

	&--vw-60 {
		width: 60vw;
	}

	&--vw-50 {
		width: 50vw;
	}

	&--pc-100 {
		width: 100%;
	}

	&--pc-90 {
		width: 90%;
	}

	&--pc-80 {
		width: 80%;
	}

	&--pc-70 {
		width: 70%;
	}

	&--pc-60 {
		width: 60%;
	}

	&--pc-50 {
		width: 50%;
	}
}



.max-height,
.height {
	&--px-600 {
		height: 600px;
	}

	&--px-500 {
		height: 500px;
	}

	&--px-400 {
		height: 400px;
	}

	&--px-300 {
		height: 300px;
	}

	&--px-200 {
		height: 200px;
	}

	&--px-100 {
		height: 100px;
	}

	&--vh-100 {
		height: 100vh;
	}

	&--vh-90 {
		height: 90vh;
	}

	&--vh-80 {
		height: 80vh;
	}

	&--vh-70 {
		height: 70vh;
	}

	&--vh-60 {
		height: 60vh;
	}

	&--vh-50 {
		height: 50vh;
	}

	&--pc-100 {
		height: 100%;
	}

	&--pc-90 {
		height: 90%;
	}

	&--pc-80 {
		height: 80%;
	}

	&--pc-70 {
		height: 70%;
	}

	&--pc-60 {
		height: 60%;
	}

	&--pc-50 {
		height: 50%;
	}
}


.position {
	&--sticky {
		&--top-0 {
			position: sticky;
			top: 0;
		}

		&--bottom-0 {
			position: sticky;
			bottom: 0;
		}
	}
}


.margin-vertical {
	&--half {
		margin-top: $base-unit-half;
		margin-bottom: $base-unit-half;
	}

	&--one {
		margin-top: $base-unit;
		margin-bottom: $base-unit;
	}

	&--two {
		margin-top: $base-unit * 2;
		margin-bottom: $base-unit * 2;
	}

	&--0 {
		margin-top: 0px;
		margin-bottom: 0px;
	}

	&--5 {
		margin-top: 5px;
		margin-bottom: 5px;
	}

	&--10 {
		margin-top: 10px;
		margin-bottom: 10px;
	}

	&--20 {
		margin-top: 20px;
		margin-bottom: 20px;
	}
}

.margin-top {
	&--half {
		margin-top: $base-unit-half;		
	}

	&--one {
		margin-top: $base-unit;
	}

	&--two {
		margin-top: $base-unit * 2;
	}

	&--0 {
		margin-top: 0px;		
	}

	&--5 {
		margin-top: 5px;		
	}

	&--10 {
		margin-top: 10px;
	}

	&--20 {
		margin-top: 20px;
	}
}

.margin-bottom {
	&--half {
		margin-bottom: $base-unit-half;		
	}

	&--one {
		margin-bottom: $base-unit;
	}

	&--two {
		margin-bottom: $base-unit * 2;
	}

	&--0 {
		margin-bottom: 0px;		
	}

	&--5 {
		margin-bottom: 5px;		
	}

	&--10 {
		margin-bottom: 10px;
	}

	&--20 {
		margin-bottom: 20px;
	}
}

.margin-horizontal {
	&--half {
		margin-left: $base-unit-half;
		margin-right: $base-unit-half;
	}

	&--one {
		margin-left: $base-unit;
		margin-right: $base-unit;
	}

	&--two {
		margin-left: $base-unit * 2;
		margin-right: $base-unit * 2;
	}
	
	&--0 {
		margin-left: 0px;
		margin-right: 0px;
	}

	&--5 {
		margin-left: 5px;
		margin-right: 5px;
	}

	&--10 {
		margin-left: 10px;
		margin-right: 10px;
	}

	&--20 {
		margin-left: 20px;
		margin-right: 20px;
	}
}

.margin-left {
	&--half {
		margin-left: $base-unit-half;
	}

	&--one {
		margin-left: $base-unit;
	}

	&--two {
		margin-left: $base-unit * 2;
	}

	&--0 {
		margin-left: 0px;
	}

	&--5 {
		margin-left: 5px;
	}

	&--10 {
		margin-left: 10px;
	}

	&--20 {
		margin-left: 20px;
	}
}

.margin-right {
	&--half {
		margin-right: $base-unit-half;
	}

	&--one {
		margin-right: $base-unit;
	}

	&--two {	
		margin-right: $base-unit * 2;
	}

	&--0 {
		margin-right: 0px;
	}

	&--5 {
		margin-right: 5px;
	}

	&--10 {
		margin-right: 10px;
	}

	&--20 {
		margin-right: 20px;
	}
}




.overflow {
	&--y-scroll {
		overflow-y: scroll;
	}
}

.text-style {
	&--line-through {
		text-decoration: line-through;
	}
}


.padding {
	&--half {
		padding: $base-unit-half;
	}

	&--one {
		padding: $base-unit;
	}

	&--two {
		padding: $base-unit * 2;
	}

	&--5 {
		padding: 5px
	}

	&--10 {
		padding: 10px
	}

	&--20 {
		padding: 20px
	}

	&--30 {
		padding: 30px
	}

	&--40 {
		padding: 40px
	}
}

.padding-vertical {

	&--half {
		padding-top: $base-unit-half;
		padding-bottom: $base-unit-half;
	}

	&--one {
		padding-top: $base-unit;
		padding-bottom: $base-unit;
	}

	&--two {
		padding-top: $base-unit * 2;
		padding-bottom: $base-unit * 2;
	}

	&--5 {
		padding-top: 5px;
		padding-bottom: 5px;
	}
	
	&--10 {
		padding-top: 10px;
		padding-bottom: 10px;
	}

	&--20 {
		padding-top: 20px;
		padding-bottom: 20px;
	}

	&--30 {
		padding-top: 30px;
		padding-bottom: 30px;
	}

	&--40 {
		padding-top: 40px;
		padding-bottom: 40px;
	}
}

.padding-bottom {

	&--half {
		padding-bottom: $base-unit-half;
	}

	&--one {
		padding-bottom: $base-unit;
	}

	&--two {
		padding-bottom: $base-unit * 2;
	}

	&--5 {		
		padding-bottom: 5px;
	}
	
	&--10 {		
		padding-bottom: 10px;
	}

	&--20 {
		padding-bottom: 20px;
	}

	&--30 {
		padding-bottom: 30px;
	}

	&--40 {
		padding-bottom: 40px;
	}
}

.padding-top {

	&--half {
		padding-top: $base-unit-half;
	}

	&--one {
		padding-top: $base-unit;
	}

	&--two {
		padding-top: $base-unit * 2;
	}

	&--5 {
		padding-top: 5px;		
	}
	
	&--10 {
		padding-top: 10px;
	}

	&--20 {
		padding-top: 20px;
	}

	&--30 {
		padding-top: 30px;
	}

	&--40 {
		padding-top: 40px;
	}
}



.padding-horizontal {

	&--half {
		padding-left: $base-unit-half;
		padding-right: $base-unit-half;
	}

	&--one {
		padding-left: $base-unit;
		padding-right: $base-unit;
	}

	&--two {
		padding-left: $base-unit * 2;
		padding-right: $base-unit * 2;
	}

	&--5 {
		padding-left: 5px;
		padding-right: 5px;
	}
	
	&--10 {
		padding-left: 10px;
		padding-right: 10px;
	}

	&--20 {
		padding-left: 20px;
		padding-right: 20px;
	}

	&--30 {
		padding-left: 30px;
		padding-right: 30px;
	}

	&--40 {
		padding-left: 40px;
		padding-right: 40px;
	}
}

.padding-right {

	&--half {
		padding-right: $base-unit-half;
	}

	&--one {
		padding-right: $base-unit;
	}

	&--two {
		padding-right: $base-unit * 2;
	}

	&--5 {		
		padding-right: 5px;
	}
	
	&--10 {		
		padding-right: 10px;
	}

	&--20 {
		padding-right: 20px;
	}

	&--30 {
		padding-right: 30px;
	}

	&--40 {
		padding-right: 40px;
	}
}

.padding-left {

	&--half {
		padding-left: $base-unit-half;
	}

	&--one {
		padding-left: $base-unit;
	}

	&--two {
		padding-left: $base-unit * 2;
	}

	&--5 {
		padding-left: 5px;		
	}
	
	&--10 {
		padding-left: 10px;
	}

	&--20 {
		padding-left: 20px;
	}

	&--30 {
		padding-left: 30px;
	}

	&--40 {
		padding-left: 40px;
	}
}




.flex {
	display: flex;

	&--column {
		flex-direction: column;
	}

	&--column-reverse {
		flex-direction: column-reverse;
	}

	&--row {
		flex-direction: row;
	}
	
	&--row-reverse {
		flex-direction: row-reverse;
	}

	&--start {
		justify-content: start;
	}

	&--space-around {
		justify-content: space-around;
	}

	&--space-between {
		justify-content: space-between;
	}

	&--center {
		justify-content: center;
	}

	&--align-items-center {
		align-items: center;
	}

}