@use "sass:math";

// Base Unit
$base-unit: 10px;
$base-unit-half: math.div($base-unit, 2);

// Heights
$row-height-small: $base-unit * 3;
$row-height-medium: $base-unit * 4;
$row-height-large: $base-unit * 5;
$row-height-over: $base-unit * 7;

// Border Radius
$border-radius-normal: $base-unit;
$border-radius-half: $base-unit-half;
$border-radius-full: $base-unit * 2;
$border-radius-none: 0;

$box-shadow: 0px 3px 10px rgba(27, 78, 96, 0.2) !default; // deprecated
$box-shadow-dark: 0px 3px 10px rgba(27, 78, 96, 0.5) !default; // deprecated
$reverse-box-shadow: -2px -3px 15px rgba(0, 0, 0, 0.2) !default; // deprecated

$universal-border-radius: 10px !default; // deprecated
$universal-border-radius-half: 5px !default; // deprecated

// Pallet Colors

$background-color: #fffffb !default;
$hover-color: rgb(220, 247, 231) !default;
$border-color: #f2f2f2 !default;

$normal-text-color: #2e2e2e !default;
$gray-text-color: gray !default;

$primary-color-normal: #2e2e2e !default;
$primary-color-transparent: rgba(46, 46, 46, 0.3) !default;
$primary-color-light: #bdbdbd !default;
$primary-color-gradient: linear-gradient(
	to right bottom,
	#444444,
	#404040,
	#3b3b3b,
	#373737,
	#333333,
	#2f2f2f,
	#2c2c2c,
	#282828,
	#232323,
	#1f1f1f,
	#1a1a1a,
	#161616
) !default;
$primary-color-text: #e0e0e0 !default;

$secondary-color-normal: #3e88c2 !default;
$secondary-color-transparent: rgba(62, 136, 194, 0.3) !default;
$secondary-color-light: #b9e1ff !default;
$secondary-color-gradient: linear-gradient(to right bottom, #71a7d3, #659fcf, #5997cb, #4c90c6, #3e88c2) !default;
$secondary-color-text: white !default;

$tertiary-color-normal: #c9dfd2 !default;
$tertiary-color-transparent: rgba(201, 223, 210, 0.3) !default;
$tertiary-color-light: rgb(220, 247, 231) !default;
$tertiary-color-gradient: linear-gradient(
	to right bottom,
	#e6f6ec,
	#e0f2e7,
	#dbede2,
	#d5e9dd,
	#d0e5d8,
	#cae1d3,
	#c4dece,
	#bedac9,
	#b6d6c3,
	#aed2bc,
	#a7cdb6,
	#9fc9b0
) !default;
$tertiary-color-text: #2e2e2e !default;

$alert-color-normal: rgb(225, 188, 41) !default;
$alert-color-transparent: rgba(225, 188, 41, 0.3) !default;
$alert-color-light: rgb(243, 228, 166) !default;
$alert-color-gradient: linear-gradient(
	to right bottom,
	#e9c843,
	#e7c63e,
	#e6c43a,
	#e4c135,
	#e3bf30,
	#e3bf2d,
	#e4be2a,
	#e4be26,
	#e6c024,
	#e9c122,
	#ebc320,
	#eec41d
) !default;
$alert-color-text: black !default;

$error-color-normal: rgb(245, 0, 87) !default;
$error-color-transparent: rgba(252, 232, 239, 1) !default;
$error-color-light: rgb(255, 168, 198) !default;
$error-color-gradient: linear-gradient(
	to right bottom,
	#f23c7c,
	#f33576,
	#f42d6f,
	#f52468,
	#f51961,
	#f3135d,
	#f20a59,
	#f00055,
	#ec0054,
	#e80053,
	#e50051,
	#e10050
) !default;
$error-color-text: white !default;

$success-color-normal: rgb(24, 139, 108) !default;
$success-color-transparent: rgba(24, 139, 108, 0.3) !default;
$success-color-light: rgb(163, 224, 208) !default;
$success-color-gradient: linear-gradient(
	to right bottom,
	#209979,
	#1f9676,
	#1d9374,
	#1c9171,
	#1a8e6f,
	#198e6f,
	#188f6f,
	#178f6f,
	#169271,
	#149573,
	#139874,
	#119b76
) !default;
$success-color-text: white !default;

$disable-color-normal: #b0bec5 !default;
$disable-color-gradient: linear-gradient(to right bottom, #c5cdd1, #c0c9ce, #bac5cb, #b5c2c8, #b0bec5) !default;

$accessory-orange-normal: rgb(255, 127, 80) !default;
$accessory-orange-transparent: rgba(255, 127, 80, 0.3) !default;
$accessory-orange-light: rgb(255, 216, 202) !default;
$accessory-orange-gradient: linear-gradient(to right bottom, #f4e5c9, #f4e3c3, #f5e2be, #f5e0b8, #f5deb3) !default;
$accessory-orange-text: black !default;

$accessory-blue-normal: rgb(25, 118, 210) !default;
$accessory-blue-transparent: rgba(25, 118, 210, 0.3) !default;
$accessory-blue-light: rgb(65, 160, 255) !default;
$accessory-blue-gradient: linear-gradient(to right bottom, #4795e3, #3d8ddf, #3285db, #267ed6, #1976d2) !default;
$accessory-blue-text: white !default;

$accessory-green-normal: rgb(82, 219, 196) !default;
$accessory-green-transparent: rgba(82, 219, 196, 0.3) !default;
$accessory-green-light: rgb(157, 255, 239) !default;
$accessory-green-gradient: linear-gradient(to right bottom, #ccf9f2, #bff4eb, #b2eee4, #a5e9dd, #98e3d6) !default;
$accessory-green-text: black !default;

$colorOptions: (
	"primary",
	"secondary",
	"tertiary",
	"error",
	"alert",
	"success",
	"accessory-green",
	"accessory-orange",
	"accessory-blue"
);

// Pallet Mixins

@mixin primary-background {
	background-color: $primary-color-normal;
	color: $primary-color-text;
}
.primary-background {
	@include primary-background;
}

@mixin secondary-background {
	background-color: $secondary-color-normal;
	color: $secondary-color-text;
}
.secondary-background {
	@include secondary-background;
}

@mixin tertiary-background {
	background-color: $tertiary-color-normal;
	color: $tertiary-color-text;
}
.tertiary-background {
	@include tertiary-background;
}

@mixin alert-background {
	background-color: $alert-color-normal;
	color: $alert-color-text;
}
.alert-background {
	@include alert-background;
}

@mixin error-background {
	background-color: $error-color-normal;
	color: $error-color-text;
}
.error-background {
	@include error-background;
}

@mixin success-background {
	background-color: $success-color-normal;
	color: $success-color-text;
}
.success-background {
	@include success-background;
}

@mixin disable-background {
	background-color: $disable-color-normal;
	color: black;
}
.disable-background {
	@include disable-background;
}

@mixin accessory-orange-background {
	background-color: $accessory-orange-normal;
	color: $accessory-orange-text;
}
.accessory-orange-background {
	@include accessory-orange-background;
}

@mixin accessory-blue-background {
	background-color: $accessory-blue-normal;
	color: $accessory-blue-text;
}
.accessory-blue-background {
	@include accessory-blue-background;
}

@mixin accessory-green-background {
	background-color: $accessory-green-normal;
	color: $accessory-green-text;
}
.accessory-green-background {
	@include accessory-green-background;
}

@mixin default-text-color {
	color: $normal-text-color;
}
.default-text-color {
	@include default-text-color;
}

@mixin gray-text-color {
	color: $gray-text-color;
}
.gray-text-color {
	@include gray-text-color;
}

@mixin primary-color {
	color: $primary-color-normal;
}
.primary-color {
	@include primary-color;
}

@mixin secondary-color {
	color: $secondary-color-normal;
}
.secondary-color {
	@include secondary-color;
}

@mixin tertiary-color {
	color: $tertiary-color-normal;
}
.tertiary-color {
	@include tertiary-color;
}

@mixin alert-color {
	color: $alert-color-normal;
}
.alert-color {
	@include alert-color;
}

@mixin error-color {
	color: $error-color-normal;
}
.error-color {
	@include error-color;
}

@mixin success-color {
	color: $success-color-normal;
}
.success-color {
	@include success-color;
}

@mixin disable-color {
	color: $disable-color-normal;
}
.disable-color {
	@include disable-color;
}

@mixin accessory-orange-color {
	color: $accessory-orange-normal;
}
.accessory-orange-color {
	@include accessory-orange-color;
}

@mixin accessory-blue-color {
	color: $accessory-blue-normal;
}
.accessory-blue-color {
	@include accessory-blue-color;
}

@mixin accessory-green-color {
	color: $accessory-green-normal;
}
.accessory-green-color {
	@include accessory-green-color;
}

// These ripple classes are depreciated in favor of ripple--{color}
%ripple {
	background-position: center;
	transition: background 0.8s;

	&:active {
		background-size: 100%;
		transition: background 0s;
	}
}

@mixin ripple-error {
	@extend %ripple;
	&:active {
		background-color: rgba($error-color-normal, 0.5) !important;
		background: rgba($error-color-normal, 0.5) !important;
	}
}
.ripple-error {
	@include ripple-error;
}

@mixin ripple-alert {
	@extend %ripple;
	&:active {
		background-color: rgba($alert-color-normal, 0.5) !important;
		background: rgba($alert-color-normal, 0.5) !important;
	}
}
.ripple-alert {
	@include ripple-alert;
}

@mixin ripple-success {
	@extend %ripple;
	&:active {
		background-color: rgba($success-color-normal, 0.5) !important;
		background: rgba($success-color-normal, 0.5) !important;
	}
}
.ripple-success {
	@include ripple-success;
}

@mixin ripple-accessory-orange {
	@extend %ripple;
	&:active {
		background-color: rgba($accessory-orange-normal, 0.5) !important;
		background: rgba($accessory-orange-normal, 0.5) !important;
	}
}
.ripple-accessory-orange {
	@include ripple-accessory-orange;
}

@mixin ripple-accessory-blue {
	@extend %ripple;
	&:active {
		background-color: rgba($accessory-blue-normal, 0.5) !important;
		background: rgba($accessory-blue-normal, 0.5) !important;
	}
}
.ripple-accessory-blue {
	@include ripple-accessory-blue;
}

@mixin ripple-accessory-green {
	@extend %ripple;
	&:active {
		background-color: rgba($accessory-green-normal, 0.5) !important;
		background: rgba($accessory-green-normal, 0.5) !important;
	}
}
.ripple-accessory-green {
	@include ripple-accessory-green;
}

@mixin ripple-primary {
	@extend %ripple;
	&:active {
		background-color: rgba($primary-color-normal, 0.5) !important;
		background: rgba($primary-color-normal, 0.5) !important;
	}
}
.ripple-primary {
	@include ripple-primary;
}

@mixin ripple-secondary {
	@extend %ripple;
	&:active {
		background-color: rgba($secondary-color-normal, 0.5) !important;
		background: rgba($secondary-color-normal, 0.5) !important;
	}
}
.ripple-secondary {
	@include ripple-secondary;
}

@mixin ripple-tertiary {
	@extend %ripple;
	&:active {
		background-color: rgba($tertiary-color-normal, 0.5) !important;
		background: rgba($tertiary-color-normal, 0.5) !important;
	}
}
.ripple-tertiary {
	@include ripple-tertiary;
}

// These hover classes are depreciated in favor of hover--{color}
@mixin hover-primary {
	&:hover {
		background-color: $primary-color-light;
		background: $primary-color-light;
	}
}
.hover-primary {
	@include hover-primary;
}

@mixin hover-secondary {
	&:hover {
		background-color: $secondary-color-light;
		background: $secondary-color-light;
	}
}
.hover-secondary {
	@include hover-secondary;
}

@mixin hover-tertiary {
	&:hover {
		background-color: $tertiary-color-transparent;
		background: $tertiary-color-transparent;
	}
}
.hover-tertiary {
	@include hover-tertiary;
}

@mixin hover-error {
	&:hover {
		background-color: $error-color-transparent;
		background: $error-color-transparent;
	}
}
.hover-error {
	@include hover-error;
}

@mixin hover-alert {
	&:hover {
		background-color: $alert-color-transparent;
		background: $alert-color-transparent;
	}
}
.hover-alert {
	@include hover-alert;
}

@mixin hover-success {
	&:hover {
		background-color: $success-color-transparent;
		background: $success-color-transparent;
	}
}
.hover-success {
	@include hover-success;
}

@mixin hover-accessory-orange {
	&:hover {
		background-color: $accessory-orange-transparent;
		background: $accessory-orange-transparent;
	}
}
.hover-accessory-orange {
	@include hover-accessory-orange;
}

@mixin hover-accessory-blue {
	&:hover {
		background-color: $accessory-blue-transparent;
		background: $accessory-blue-transparent;
	}
}
.hover-accessory-blue {
	@include hover-accessory-blue;
}

@mixin hover-accessory-green {
	&:hover {
		background-color: $accessory-green-transparent;
		background: $accessory-green-transparent;
	}
}
.hover-accessory-green {
	@include hover-accessory-green;
}

@function getColorVariable($colorName, $colorType) {
	@if $colorName == "primary" and $colorType == "normal" {
		@return $primary-color-normal;
	} @else if $colorName == "primary" and $colorType == "light" {
		@return $primary-color-light;
	} @else if $colorName == "primary" and $colorType == "text" {
		@return $primary-color-text;
	} @else if $colorName == "secondary" and $colorType == "normal" {
		@return $secondary-color-normal;
	} @else if $colorName == "secondary" and $colorType == "light" {
		@return $secondary-color-light;
	} @else if $colorName == "secondary" and $colorType == "text" {
		@return $secondary-color-text;
	} @else if $colorName == "tertiary" and $colorType == "normal" {
		@return $tertiary-color-normal;
	} @else if $colorName == "tertiary" and $colorType == "light" {
		@return $tertiary-color-light;
	} @else if $colorName == "tertiary" and $colorType == "text" {
		@return $tertiary-color-text;
	} @else if $colorName == "alert" and $colorType == "normal" {
		@return $alert-color-normal;
	} @else if $colorName == "alert" and $colorType == "light" {
		@return $alert-color-light;
	} @else if $colorName == "alert" and $colorType == "text" {
		@return $alert-color-text;
	} @else if $colorName == "error" and $colorType == "normal" {
		@return $error-color-normal;
	} @else if $colorName == "error" and $colorType == "light" {
		@return $error-color-light;
	} @else if $colorName == "error" and $colorType == "text" {
		@return $error-color-text;
	} @else if $colorName == "success" and $colorType == "normal" {
		@return $success-color-normal;
	} @else if $colorName == "success" and $colorType == "light" {
		@return $success-color-light;
	} @else if $colorName == "success" and $colorType == "text" {
		@return $success-color-text;
	} @else if $colorName == "accessory-blue" and $colorType == "normal" {
		@return $accessory-blue-normal;
	} @else if $colorName == "accessory-blue" and $colorType == "light" {
		@return $accessory-blue-light;
	} @else if $colorName == "accessory-blue" and $colorType == "text" {
		@return $accessory-blue-text;
	} @else if $colorName == "accessory-green" and $colorType == "normal" {
		@return $accessory-green-normal;
	} @else if $colorName == "accessory-green" and $colorType == "light" {
		@return $accessory-green-light;
	} @else if $colorName == "accessory-green" and $colorType == "text" {
		@return $accessory-green-text;
	} @else if $colorName == "accessory-orange" and $colorType == "normal" {
		@return $accessory-orange-normal;
	} @else if $colorName == "accessory-orange" and $colorType == "light" {
		@return $accessory-orange-light;
	} @else if $colorName == "accessory-orange" and $colorType == "text" {
		@return $accessory-orange-text;
	}
}

@mixin colorMixin($property, $includeSingleValueColors, $optionalSuffix: "") {
	@each $c in $colorOptions {
		&--#{$c}-normal {
			#{$property}: getColorVariable($c, "normal") unquote($optionalSuffix);
		}

		&--#{$c}-light {
			#{$property}: getColorVariable($c, "light") unquote($optionalSuffix);
		}

		&--#{$c}-text {
			#{$property}: getColorVariable($c, "text") unquote($optionalSuffix);
		}
	}

	@if $includeSingleValueColors {
		&--hover {
			#{$property}: $hover-color unquote($optionalSuffix);
		}

		&--background {
			#{$property}: $background-color unquote($optionalSuffix);
		}

		&--white {
			#{$property}: white unquote($optionalSuffix);
		}
	}
}

@mixin colorStateMixin($property, $includeSingleValueColors, $optionalSuffix: "", $state: "") {
	@each $c in $colorOptions {
		&--#{$c}-normal {
			#{$state} {
				#{$property}: getColorVariable($c, "normal") unquote($optionalSuffix);
			}
		}

		&--#{$c}-light {
			#{$state} {
				#{$property}: getColorVariable($c, "light") unquote($optionalSuffix);
			}
		}

		&--#{$c}-text {
			#{$state} {
				#{$property}: getColorVariable($c, "text") unquote($optionalSuffix);
			}
		}
	}

	@if $includeSingleValueColors {
		&--hover {
			#{$state} {
				#{$property}: $hover-color unquote($optionalSuffix);
			}
		}

		&--background {
			#{$state} {
				#{$property}: $background-color unquote($optionalSuffix);
			}
		}

		&--white {
			#{$state} {
				#{$property}: white unquote($optionalSuffix);
			}
		}
	}
}

.background-color {
	@include colorMixin(background-color, true);
}

.color {
	@include colorMixin(color, false, !important);
}

.hover {
	@include colorStateMixin(background-color, false, !important, "&:hover");
}

.hover-border {
	@include colorStateMixin(border-color, false, !important, "&:hover");
}

.border {
	&--px-0 {
		border-width: 0px;
	}

	&--px-1 {
		border-width: 1px;
	}

	&--px-2 {
		border-width: 2px;
	}

	&--solid {
		border-style: solid;
	}

	&--dotted {
		border-style: dotted;
	}

	&--dashed {
		border-style: dashed;
	}

	@include colorMixin(border-color, true, !important);
}

.ripple {
	background-position: center;
	transition: background 0.8s;

	&:active {
		background-size: 100%;
		transition: background 0s;
	}

	@include colorStateMixin(background-color, false, !important, "&:active");
}

// Sizes

$laptop13BreakPoint: 1400px;
$laptop15BreakPoint: 1550px;
$desktopBreakPoint: 1900px;
$tablet13LandscapeBreakPoint: 1400px;
$tablet11LandscapeBreakPoint: 1200px;
$tablet10LandscapeBreakPoint: 1050px;
$tablet13PortraitBreakPoint: 1050px;
$tablet11PortraitBreakPoint: 900px;
$tablet10PortraitBreakPoint: 800px;
$mobileBreakPoint: 700px;
$drawer-width: 180px !default;
$drawer-item-width: 160px !default;
$navbar-height: $row-height-large !default;

.border-radius {
	&--zero {
		border-radius: 0px;
	}

	&--none {
		border-radius: 0px;
	}

	&--half {
		border-radius: $border-radius-half;
	}

	&--normal {
		border-radius: $border-radius-normal;
	}

	&--full {
		border-radius: $border-radius-full;
	}
}

// Fonts
$paragraph-font-family: "Roboto Condensed", sans-serif !default; // deprecated
$paragraph-font-light-weight: 300 !default; // deprecated
$paragraph-font-regular-weight: 400 !default; // deprecated

$header-font-family: "Montserrat", sans-serif !default; // deprecated
$header-font-bold-weight: 600 !default; // deprecated

$font-weight-light: 300 !default;
$font-weight-normal: 400 !default;
$font-weight-bold: 600 !default;
$font-weight-extra-bold: 700 !default;

$font-family-primary: "Roboto Condensed", sans-serif !default;
$font-family-secondary: "Montserrat", sans-serif !default;

// Elevation
$elevation-shadow-0: none;
$elevation-shadow-1: 0px 3px 10px rgba(27, 78, 96, 0.2) !default;
$elevation-shadow-2: 0px 3px 10px rgba(27, 78, 96, 0.5) !default;
