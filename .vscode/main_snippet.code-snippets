{
	// Place your vieolo-ui workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Component Creator": {
		"scope": "typescriptreact",
		"prefix": "~viewComponentCreator",
		"body": [
			"// React",
			"import React from 'react';",
			"",
			"// Material UI",
			"import IconOne from '@mui/icons-material/Assignment';",
			"import IconTwo from '@mui/icons-material/Backup';",
			"import IconThree from '@mui/icons-material/Cake';",
			"import IconFour from '@mui/icons-material/DataUsage';",
			"",
			"// Vieolo UI",
			"import ${1} from '../../lib/${2}';",
			"",
			"// Types",
			"import { ViewData } from '../main/main';",
			"",
			"type ${1}PropsType = React.ComponentProps<typeof ${1}>;",
			"",
			"export function ${3}Options(): ViewData {",
			"",
    		"    return {",
        	"        constants: {",
			"",
        	"        } as Partial<${1}PropsType>,",
        	"        variables: {",
			"",
        	"        }",
    		"    }",
			"}",
			"",
			"",
			"export function ${1}Creator(props: {p: ${1}PropsType}) {",
			"",
    		"    return <${1}",
			"",        	
    		"    />",
			"}"
		],
		"description": "Log output to console"
	}
}